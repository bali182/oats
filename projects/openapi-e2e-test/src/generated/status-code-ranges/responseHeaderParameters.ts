/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from edge-cases/status-code-ranges.json (originating from oats-ts/oats-schemas)
 */

import { parameters, schemas } from '@oats-ts/openapi-runtime'

export const range1XxResponseHeaderParameters = {
  '1XX': {
    parameters: { 'X-Foo': parameters.header.simple.primitive(parameters.value.string()) },
    schema: schemas.object(schemas.shape({ 'X-Foo': schemas.optional(schemas.string()) })),
  },
} as const

export const range2XxResponseHeaderParameters = {
  '2XX': {
    parameters: { 'X-Foo': parameters.header.simple.primitive(parameters.value.string()) },
    schema: schemas.object(schemas.shape({ 'X-Foo': schemas.optional(schemas.string()) })),
  },
} as const

export const range3XxResponseHeaderParameters = {
  '3XX': {
    parameters: { 'X-Foo': parameters.header.simple.primitive(parameters.value.string()) },
    schema: schemas.object(schemas.shape({ 'X-Foo': schemas.optional(schemas.string()) })),
  },
} as const

export const range4XxResponseHeaderParameters = {
  '4XX': {
    parameters: { 'X-Foo': parameters.header.simple.primitive(parameters.value.string()) },
    schema: schemas.object(schemas.shape({ 'X-Foo': schemas.optional(schemas.string()) })),
  },
} as const

export const range5XxResponseHeaderParameters = {
  '5XX': {
    parameters: { 'X-Foo': parameters.header.simple.primitive(parameters.value.string()) },
    schema: schemas.object(schemas.shape({ 'X-Foo': schemas.optional(schemas.string()) })),
  },
} as const

export const withNormalStatusesResponseHeaderParameters = {
  400: {
    parameters: { 'X-Foo': parameters.header.simple.primitive(parameters.value.string()) },
    schema: schemas.object(schemas.shape({ 'X-Foo': schemas.optional(schemas.string()) })),
  },
  401: {
    parameters: { 'X-Foo': parameters.header.simple.primitive(parameters.value.string()) },
    schema: schemas.object(schemas.shape({ 'X-Foo': schemas.optional(schemas.string()) })),
  },
  403: {
    parameters: { 'X-Foo': parameters.header.simple.primitive(parameters.value.string()) },
    schema: schemas.object(schemas.shape({ 'X-Foo': schemas.optional(schemas.string()) })),
  },
  500: {
    parameters: { 'X-Foo': parameters.header.simple.primitive(parameters.value.string()) },
    schema: schemas.object(schemas.shape({ 'X-Foo': schemas.optional(schemas.string()) })),
  },
  '4XX': {
    parameters: { 'X-Foo': parameters.header.simple.primitive(parameters.value.string()) },
    schema: schemas.object(schemas.shape({ 'X-Foo': schemas.optional(schemas.string()) })),
  },
} as const
