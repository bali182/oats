/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from generated-schemas/content-parameters.json (originating from oats-ts/oats-schemas)
 */

import { HeaderParameters, parameter, validators } from '@oats-ts/openapi-runtime'
import { HeaderParametersRequestHeaderParameters } from './requestHeaderTypes'
import {
  commonEnumTypeTypeValidator,
  commonObjectTypeTypeValidator,
  commonOptObjectTypeTypeValidator,
} from './typeValidators'

export const headerParametersRequestHeaderParameters: HeaderParameters<HeaderParametersRequestHeaderParameters> = {
  descriptor: {
    'X-Str-Header': parameter.header.required.schema('application/json', validators.string()),
    'X-OptStr-Header': parameter.header.schema('application/json', validators.string()),
    'X-Num-Header': parameter.header.required.schema('application/json', validators.number()),
    'X-OptNum-Header': parameter.header.schema('application/json', validators.number()),
    'X-Bool-Header': parameter.header.required.schema('application/json', validators.boolean()),
    'X-OptBool-Header': parameter.header.schema('application/json', validators.boolean()),
    'X-Enm-Header': parameter.header.required.schema(
      'application/json',
      validators.lazy(() => commonEnumTypeTypeValidator),
    ),
    'X-OptEnm-Header': parameter.header.schema(
      'application/json',
      validators.lazy(() => commonEnumTypeTypeValidator),
    ),
    'X-StrArr-Header': parameter.header.required.schema(
      'application/json',
      validators.array(validators.items(validators.string())),
    ),
    'X-OptStrArr-Header': parameter.header.schema(
      'application/json',
      validators.array(validators.items(validators.string())),
    ),
    'X-NumArr-Header': parameter.header.required.schema(
      'application/json',
      validators.array(validators.items(validators.number())),
    ),
    'X-OptNumArr-Header': parameter.header.schema(
      'application/json',
      validators.array(validators.items(validators.number())),
    ),
    'X-BoolArr-Header': parameter.header.required.schema(
      'application/json',
      validators.array(validators.items(validators.boolean())),
    ),
    'X-OptBoolArr-Header': parameter.header.schema(
      'application/json',
      validators.array(validators.items(validators.boolean())),
    ),
    'X-EnmArr-Header': parameter.header.required.schema(
      'application/json',
      validators.array(validators.items(validators.lazy(() => commonEnumTypeTypeValidator))),
    ),
    'X-OptEnmArr-Header': parameter.header.schema(
      'application/json',
      validators.array(validators.items(validators.lazy(() => commonEnumTypeTypeValidator))),
    ),
    'X-Obj-Header': parameter.header.required.schema(
      'application/json',
      validators.lazy(() => commonObjectTypeTypeValidator),
    ),
    'X-OptObj-Header': parameter.header.schema(
      'application/json',
      validators.lazy(() => commonOptObjectTypeTypeValidator),
    ),
  },
}
