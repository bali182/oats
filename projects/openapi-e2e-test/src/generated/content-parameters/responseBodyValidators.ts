/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from generated-schemas/content-parameters.json (originating from oats-ts/oats-schemas)
 */

import { validators } from '@oats-ts/openapi-runtime'
import {
  cookieParametersTypeValidator,
  headerParametersTypeValidator,
  parameterIssueTypeValidator,
  pathParametersTypeValidator,
  queryParametersTypeValidator,
} from './typeValidators'

export const cookieParametersResponseBodyValidator = {
  200: { 'application/json': validators.lazy(() => cookieParametersTypeValidator) },
  400: { 'application/json': validators.array(validators.items(validators.lazy(() => parameterIssueTypeValidator))) },
} as const

export const headerParametersResponseBodyValidator = {
  200: { 'application/json': validators.lazy(() => headerParametersTypeValidator) },
  400: { 'application/json': validators.array(validators.items(validators.lazy(() => parameterIssueTypeValidator))) },
} as const

export const pathParametersResponseBodyValidator = {
  200: { 'application/json': validators.lazy(() => pathParametersTypeValidator) },
  400: { 'application/json': validators.array(validators.items(validators.lazy(() => parameterIssueTypeValidator))) },
} as const

export const queryParametersResponseBodyValidator = {
  200: { 'application/json': validators.lazy(() => queryParametersTypeValidator) },
  400: { 'application/json': validators.array(validators.items(validators.lazy(() => parameterIssueTypeValidator))) },
} as const
