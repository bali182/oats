/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from generated-schemas/content-parameters.json (originating from oats-ts/oats-schemas)
 */

import {
  PathParameters,
  parameter,
  parsePathToMatcher,
  parsePathToSegments,
  validators,
} from '@oats-ts/openapi-runtime'
import { PathParametersPathParameters } from './pathTypes'
import { commonEnumTypeTypeValidator, commonObjectTypeTypeValidator } from './typeValidators'

export const pathParametersPathParameters: PathParameters<PathParametersPathParameters> = {
  descriptor: {
    str: parameter.path.required.schema('application/json', validators.string()),
    num: parameter.path.required.schema('application/json', validators.number()),
    bool: parameter.path.required.schema('application/json', validators.boolean()),
    enm: parameter.path.required.schema(
      'application/json',
      validators.lazy(() => commonEnumTypeTypeValidator),
    ),
    strArr: parameter.path.required.schema('application/json', validators.array(validators.items(validators.string()))),
    numArr: parameter.path.required.schema('application/json', validators.array(validators.items(validators.number()))),
    boolArr: parameter.path.required.schema(
      'application/json',
      validators.array(validators.items(validators.boolean())),
    ),
    enmArr: parameter.path.required.schema(
      'application/json',
      validators.array(validators.items(validators.lazy(() => commonEnumTypeTypeValidator))),
    ),
    obj: parameter.path.required.schema(
      'application/json',
      validators.lazy(() => commonObjectTypeTypeValidator),
    ),
  },
  matcher: parsePathToMatcher('/path-parameters/{str}/{num}/{bool}/{enm}/{strArr}/{numArr}/{boolArr}/{enmArr}/{obj}'),
  pathSegments: parsePathToSegments(
    '/path-parameters/{str}/{num}/{bool}/{enm}/{strArr}/{numArr}/{boolArr}/{enmArr}/{obj}',
  ),
}
