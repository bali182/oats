/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from generated-schemas/content-parameters.json (originating from oats-ts/oats-schemas)
 */

import {
  PathDescriptorRule,
  parameters,
  parsePathToMatcher,
  parsePathToSegments,
  schemas,
} from '@oats-ts/openapi-runtime'
import { PathParametersPathParameters } from './pathTypes'
import { contentCommonEnumTypeTypeValidator, contentCommonObjectTypeTypeValidator } from './typeValidators'

export const pathParametersPathParameters: PathDescriptorRule<PathParametersPathParameters> = {
  parameters: {
    str: parameters.path.required.schema('application/json'),
    num: parameters.path.required.schema('application/json'),
    bool: parameters.path.required.schema('application/json'),
    enm: parameters.path.required.schema('application/json'),
    strArr: parameters.path.required.schema('application/json'),
    numArr: parameters.path.required.schema('application/json'),
    boolArr: parameters.path.required.schema('application/json'),
    enmArr: parameters.path.required.schema('application/json'),
    obj: parameters.path.required.schema('application/json'),
  },
  schema: schemas.object(
    schemas.shape({
      bool: schemas.boolean(),
      boolArr: schemas.array(schemas.items(schemas.boolean())),
      enm: schemas.lazy(() => contentCommonEnumTypeTypeValidator),
      enmArr: schemas.array(schemas.items(schemas.lazy(() => contentCommonEnumTypeTypeValidator))),
      num: schemas.number(),
      numArr: schemas.array(schemas.items(schemas.number())),
      obj: schemas.lazy(() => contentCommonObjectTypeTypeValidator),
      str: schemas.string(),
      strArr: schemas.array(schemas.items(schemas.string())),
    }),
  ),
  matcher: parsePathToMatcher('/path-parameters/{str}/{num}/{bool}/{enm}/{strArr}/{numArr}/{boolArr}/{enmArr}/{obj}'),
  pathSegments: parsePathToSegments(
    '/path-parameters/{str}/{num}/{bool}/{enm}/{strArr}/{numArr}/{boolArr}/{enmArr}/{obj}',
  ),
}
