/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from https://raw.githubusercontent.com/oats-ts/oats-schemas/master/schemas/discriminated-union-type-schemas.json
 */

import { lazy, literal, object, shape, string, union } from '@oats-ts/validators'

export type LeafType1 = {
  type: 'LeafType1'
  foo: string
}

export type LeafType2 = {
  type: 'LeafType2'
  bar: string
}

export type LeafType3 = {
  type: 'LeafType3'
  foobar: string
}

export type MidLevelUnionType = LeafType2 | LeafType3

export type TopLevelUnionType = LeafType1 | MidLevelUnionType

export function isLeafType1(input: any): input is LeafType1 {
  return input !== null && typeof input === 'object' && input.type === 'LeafType1' && typeof input.foo === 'string'
}

export function isLeafType2(input: any): input is LeafType2 {
  return input !== null && typeof input === 'object' && input.type === 'LeafType2' && typeof input.bar === 'string'
}

export function isLeafType3(input: any): input is LeafType3 {
  return input !== null && typeof input === 'object' && input.type === 'LeafType3' && typeof input.foobar === 'string'
}

export function isMidLevelUnionType(input: any): input is MidLevelUnionType {
  return isLeafType2(input) || isLeafType3(input)
}

export function isTopLevelUnionType(input: any): input is TopLevelUnionType {
  return isLeafType1(input) || isMidLevelUnionType(input)
}

export const leafType1TypeValidator = object(
  shape({
    type: literal('LeafType1'),
    foo: string(),
  }),
)

export const leafType2TypeValidator = object(
  shape({
    type: literal('LeafType2'),
    bar: string(),
  }),
)

export const leafType3TypeValidator = object(
  shape({
    type: literal('LeafType3'),
    foobar: string(),
  }),
)

export const midLevelUnionTypeTypeValidator = union({
  LeafType2: lazy(() => leafType2TypeValidator),
  LeafType3: lazy(() => leafType3TypeValidator),
})

export const topLevelUnionTypeTypeValidator = union({
  LeafType1: lazy(() => leafType1TypeValidator),
  MidLevelUnionType: lazy(() => midLevelUnionTypeTypeValidator),
})
