/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from generated-schemas/parameters.json (originating from oats-ts/oats-schemas)
 */

import {
  QueryParameters as _QueryParameters,
  parameter as _parameter,
  validators as _validators,
} from '@oats-ts/openapi-runtime'
import {
  DeepObjectQueryParametersQueryParameters,
  FormQueryParametersQueryParameters,
  PipeDelimitedQueryParametersQueryParameters,
  SpaceDelimitedQueryParametersQueryParameters,
} from './queryTypes'
import {
  commonEnumTypeTypeValidator,
  commonObjectTypeExplTypeValidator,
  commonObjectTypeTypeValidator,
  commonOptObjectTypeExplTypeValidator,
  commonOptObjectTypeTypeValidator,
} from './typeValidators'

export const deepObjectQueryParametersQueryParameters: _QueryParameters<DeepObjectQueryParametersQueryParameters> = {
  descriptor: {
    objExpl: _parameter.query.deepObject.exploded.required.object({
      objExplStrField: _parameter.value.string(),
      objExplNumField: _parameter.value.number(),
      objExplBoolField: _parameter.value.boolean(),
      objExplEnmField: _parameter.value.string(),
      objExplOptStrField: _parameter.value.optional(_parameter.value.string()),
      objExplOptNumField: _parameter.value.optional(_parameter.value.number()),
      objExplOptBoolField: _parameter.value.optional(_parameter.value.boolean()),
      objExplOptEnmField: _parameter.value.optional(_parameter.value.string()),
    }),
    optObjExpl: _parameter.query.deepObject.exploded.object({
      optObjExplStrField: _parameter.value.string(),
      optObjExplNumField: _parameter.value.number(),
      optObjExplBoolField: _parameter.value.boolean(),
      optObjExplEnmField: _parameter.value.string(),
      optObjExplOptStrField: _parameter.value.optional(_parameter.value.string()),
      optObjExplOptNumField: _parameter.value.optional(_parameter.value.number()),
      optObjExplOptBoolField: _parameter.value.optional(_parameter.value.boolean()),
      optObjExplOptEnmField: _parameter.value.optional(_parameter.value.string()),
    }),
  },
  schema: _validators.object(
    _validators.shape({
      objExpl: _validators.lazy(() => commonObjectTypeExplTypeValidator),
      optObjExpl: _validators.optional(_validators.lazy(() => commonOptObjectTypeExplTypeValidator)),
    }),
  ),
}

export const formQueryParametersQueryParameters: _QueryParameters<FormQueryParametersQueryParameters> = {
  descriptor: {
    strExpl: _parameter.query.form.exploded.required.primitive(_parameter.value.string()),
    optStrExpl: _parameter.query.form.exploded.primitive(_parameter.value.string()),
    str: _parameter.query.form.required.primitive(_parameter.value.string()),
    optStr: _parameter.query.form.primitive(_parameter.value.string()),
    numExpl: _parameter.query.form.exploded.required.primitive(_parameter.value.number()),
    optNumExpl: _parameter.query.form.exploded.primitive(_parameter.value.number()),
    num: _parameter.query.form.required.primitive(_parameter.value.number()),
    optNum: _parameter.query.form.primitive(_parameter.value.number()),
    boolExpl: _parameter.query.form.exploded.required.primitive(_parameter.value.boolean()),
    optBoolExpl: _parameter.query.form.exploded.primitive(_parameter.value.boolean()),
    bool: _parameter.query.form.required.primitive(_parameter.value.boolean()),
    optBool: _parameter.query.form.primitive(_parameter.value.boolean()),
    enmExpl: _parameter.query.form.exploded.required.primitive(_parameter.value.string()),
    optEnmExpl: _parameter.query.form.exploded.primitive(_parameter.value.string()),
    enm: _parameter.query.form.required.primitive(_parameter.value.string()),
    optEnm: _parameter.query.form.primitive(_parameter.value.string()),
    strArrExpl: _parameter.query.form.exploded.required.array(_parameter.value.string()),
    optStrArrExpl: _parameter.query.form.exploded.array(_parameter.value.string()),
    strArr: _parameter.query.form.required.array(_parameter.value.string()),
    optStrArr: _parameter.query.form.array(_parameter.value.string()),
    numArrExpl: _parameter.query.form.exploded.required.array(_parameter.value.number()),
    optNumArrExpl: _parameter.query.form.exploded.array(_parameter.value.number()),
    numArr: _parameter.query.form.required.array(_parameter.value.number()),
    optNumArr: _parameter.query.form.array(_parameter.value.number()),
    boolArrExpl: _parameter.query.form.exploded.required.array(_parameter.value.boolean()),
    optBoolArrExpl: _parameter.query.form.exploded.array(_parameter.value.boolean()),
    boolArr: _parameter.query.form.required.array(_parameter.value.boolean()),
    optBoolArr: _parameter.query.form.array(_parameter.value.boolean()),
    enmArrExpl: _parameter.query.form.exploded.required.array(_parameter.value.string()),
    optEnmArrExpl: _parameter.query.form.exploded.array(_parameter.value.string()),
    enmArr: _parameter.query.form.required.array(_parameter.value.string()),
    optEnmArr: _parameter.query.form.array(_parameter.value.string()),
    objExpl: _parameter.query.form.exploded.required.object({
      objExplStrField: _parameter.value.string(),
      objExplNumField: _parameter.value.number(),
      objExplBoolField: _parameter.value.boolean(),
      objExplEnmField: _parameter.value.string(),
      objExplOptStrField: _parameter.value.optional(_parameter.value.string()),
      objExplOptNumField: _parameter.value.optional(_parameter.value.number()),
      objExplOptBoolField: _parameter.value.optional(_parameter.value.boolean()),
      objExplOptEnmField: _parameter.value.optional(_parameter.value.string()),
    }),
    optObjExpl: _parameter.query.form.exploded.object({
      optObjExplStrField: _parameter.value.string(),
      optObjExplNumField: _parameter.value.number(),
      optObjExplBoolField: _parameter.value.boolean(),
      optObjExplEnmField: _parameter.value.string(),
      optObjExplOptStrField: _parameter.value.optional(_parameter.value.string()),
      optObjExplOptNumField: _parameter.value.optional(_parameter.value.number()),
      optObjExplOptBoolField: _parameter.value.optional(_parameter.value.boolean()),
      optObjExplOptEnmField: _parameter.value.optional(_parameter.value.string()),
    }),
    obj: _parameter.query.form.required.object({
      objStrField: _parameter.value.string(),
      objNumField: _parameter.value.number(),
      objBoolField: _parameter.value.boolean(),
      objEnmField: _parameter.value.string(),
      objOptStrField: _parameter.value.optional(_parameter.value.string()),
      objOptNumField: _parameter.value.optional(_parameter.value.number()),
      objOptBoolField: _parameter.value.optional(_parameter.value.boolean()),
      objOptEnmField: _parameter.value.optional(_parameter.value.string()),
    }),
    optObj: _parameter.query.form.object({
      optObjStrField: _parameter.value.string(),
      optObjNumField: _parameter.value.number(),
      optObjBoolField: _parameter.value.boolean(),
      optObjEnmField: _parameter.value.string(),
      optObjOptStrField: _parameter.value.optional(_parameter.value.string()),
      optObjOptNumField: _parameter.value.optional(_parameter.value.number()),
      optObjOptBoolField: _parameter.value.optional(_parameter.value.boolean()),
      optObjOptEnmField: _parameter.value.optional(_parameter.value.string()),
    }),
  },
  schema: _validators.object(
    _validators.shape({
      bool: _validators.boolean(),
      boolArr: _validators.array(_validators.items(_validators.boolean())),
      boolArrExpl: _validators.array(_validators.items(_validators.boolean())),
      boolExpl: _validators.boolean(),
      enm: _validators.lazy(() => commonEnumTypeTypeValidator),
      enmArr: _validators.array(_validators.items(_validators.lazy(() => commonEnumTypeTypeValidator))),
      enmArrExpl: _validators.array(_validators.items(_validators.lazy(() => commonEnumTypeTypeValidator))),
      enmExpl: _validators.lazy(() => commonEnumTypeTypeValidator),
      num: _validators.number(),
      numArr: _validators.array(_validators.items(_validators.number())),
      numArrExpl: _validators.array(_validators.items(_validators.number())),
      numExpl: _validators.number(),
      obj: _validators.lazy(() => commonObjectTypeTypeValidator),
      objExpl: _validators.lazy(() => commonObjectTypeExplTypeValidator),
      optBool: _validators.optional(_validators.boolean()),
      optBoolArr: _validators.optional(_validators.array(_validators.items(_validators.boolean()))),
      optBoolArrExpl: _validators.optional(_validators.array(_validators.items(_validators.boolean()))),
      optBoolExpl: _validators.optional(_validators.boolean()),
      optEnm: _validators.optional(_validators.lazy(() => commonEnumTypeTypeValidator)),
      optEnmArr: _validators.optional(
        _validators.array(_validators.items(_validators.lazy(() => commonEnumTypeTypeValidator))),
      ),
      optEnmArrExpl: _validators.optional(
        _validators.array(_validators.items(_validators.lazy(() => commonEnumTypeTypeValidator))),
      ),
      optEnmExpl: _validators.optional(_validators.lazy(() => commonEnumTypeTypeValidator)),
      optNum: _validators.optional(_validators.number()),
      optNumArr: _validators.optional(_validators.array(_validators.items(_validators.number()))),
      optNumArrExpl: _validators.optional(_validators.array(_validators.items(_validators.number()))),
      optNumExpl: _validators.optional(_validators.number()),
      optObj: _validators.optional(_validators.lazy(() => commonOptObjectTypeTypeValidator)),
      optObjExpl: _validators.optional(_validators.lazy(() => commonOptObjectTypeExplTypeValidator)),
      optStr: _validators.optional(_validators.string()),
      optStrArr: _validators.optional(_validators.array(_validators.items(_validators.string()))),
      optStrArrExpl: _validators.optional(_validators.array(_validators.items(_validators.string()))),
      optStrExpl: _validators.optional(_validators.string()),
      str: _validators.string(),
      strArr: _validators.array(_validators.items(_validators.string())),
      strArrExpl: _validators.array(_validators.items(_validators.string())),
      strExpl: _validators.string(),
    }),
  ),
}

export const pipeDelimitedQueryParametersQueryParameters: _QueryParameters<PipeDelimitedQueryParametersQueryParameters> =
  {
    descriptor: {
      strArrExpl: _parameter.query.pipeDelimited.exploded.required.array(_parameter.value.string()),
      optStrArrExpl: _parameter.query.pipeDelimited.exploded.array(_parameter.value.string()),
      numArrExpl: _parameter.query.pipeDelimited.exploded.required.array(_parameter.value.number()),
      optNumArrExpl: _parameter.query.pipeDelimited.exploded.array(_parameter.value.number()),
      boolArrExpl: _parameter.query.pipeDelimited.exploded.required.array(_parameter.value.boolean()),
      optBoolArrExpl: _parameter.query.pipeDelimited.exploded.array(_parameter.value.boolean()),
      enmArrExpl: _parameter.query.pipeDelimited.exploded.required.array(_parameter.value.string()),
      optEnmArrExpl: _parameter.query.pipeDelimited.exploded.array(_parameter.value.string()),
    },
    schema: _validators.object(
      _validators.shape({
        boolArrExpl: _validators.array(_validators.items(_validators.boolean())),
        enmArrExpl: _validators.array(_validators.items(_validators.lazy(() => commonEnumTypeTypeValidator))),
        numArrExpl: _validators.array(_validators.items(_validators.number())),
        optBoolArrExpl: _validators.optional(_validators.array(_validators.items(_validators.boolean()))),
        optEnmArrExpl: _validators.optional(
          _validators.array(_validators.items(_validators.lazy(() => commonEnumTypeTypeValidator))),
        ),
        optNumArrExpl: _validators.optional(_validators.array(_validators.items(_validators.number()))),
        optStrArrExpl: _validators.optional(_validators.array(_validators.items(_validators.string()))),
        strArrExpl: _validators.array(_validators.items(_validators.string())),
      }),
    ),
  }

export const spaceDelimitedQueryParametersQueryParameters: _QueryParameters<SpaceDelimitedQueryParametersQueryParameters> =
  {
    descriptor: {
      strArrExpl: _parameter.query.spaceDelimited.exploded.required.array(_parameter.value.string()),
      optStrArrExpl: _parameter.query.spaceDelimited.exploded.array(_parameter.value.string()),
      numArrExpl: _parameter.query.spaceDelimited.exploded.required.array(_parameter.value.number()),
      optNumArrExpl: _parameter.query.spaceDelimited.exploded.array(_parameter.value.number()),
      boolArrExpl: _parameter.query.spaceDelimited.exploded.required.array(_parameter.value.boolean()),
      optBoolArrExpl: _parameter.query.spaceDelimited.exploded.array(_parameter.value.boolean()),
      enmArrExpl: _parameter.query.spaceDelimited.exploded.required.array(_parameter.value.string()),
      optEnmArrExpl: _parameter.query.spaceDelimited.exploded.array(_parameter.value.string()),
    },
    schema: _validators.object(
      _validators.shape({
        boolArrExpl: _validators.array(_validators.items(_validators.boolean())),
        enmArrExpl: _validators.array(_validators.items(_validators.lazy(() => commonEnumTypeTypeValidator))),
        numArrExpl: _validators.array(_validators.items(_validators.number())),
        optBoolArrExpl: _validators.optional(_validators.array(_validators.items(_validators.boolean()))),
        optEnmArrExpl: _validators.optional(
          _validators.array(_validators.items(_validators.lazy(() => commonEnumTypeTypeValidator))),
        ),
        optNumArrExpl: _validators.optional(_validators.array(_validators.items(_validators.number()))),
        optStrArrExpl: _validators.optional(_validators.array(_validators.items(_validators.string()))),
        strArrExpl: _validators.array(_validators.items(_validators.string())),
      }),
    ),
  }
