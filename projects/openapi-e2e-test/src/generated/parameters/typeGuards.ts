/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from generated-schemas/parameters.json (originating from oats-ts/oats-schemas)
 */

import {
  CommonEnumType,
  CommonObjectType,
  CommonObjectTypeExpl,
  CommonOptObjectType,
  CommonOptObjectTypeExpl,
  DeepObjectQueryParameters,
  FormCookieParameters,
  FormQueryParameters,
  LabelPathParameters,
  MatrixPathParameters,
  ParameterIssue,
  PipeDelimitedQueryParameters,
  SimpleHeaderParameters,
  SimplePathParameters,
  SimpleResponseHeaderParameters,
  SpaceDelimitedQueryParameters,
} from './types'

export function isCommonEnumType(input: any): input is CommonEnumType {
  return input === 'A' || input === 'B' || input === 'C'
}

export function isCommonObjectType(input: any): input is CommonObjectType {
  return (
    input !== null &&
    typeof input === 'object' &&
    typeof input.objBoolField === 'boolean' &&
    (isCommonEnumType(input.objEnmField) as boolean) &&
    typeof input.objNumField === 'number' &&
    (input.objOptBoolField === null ||
      input.objOptBoolField === undefined ||
      typeof input.objOptBoolField === 'boolean') &&
    (input.objOptEnmField === null ||
      input.objOptEnmField === undefined ||
      (isCommonEnumType(input.objOptEnmField) as boolean)) &&
    (input.objOptNumField === null || input.objOptNumField === undefined || typeof input.objOptNumField === 'number') &&
    (input.objOptStrField === null || input.objOptStrField === undefined || typeof input.objOptStrField === 'string') &&
    typeof input.objStrField === 'string'
  )
}

export function isCommonObjectTypeExpl(input: any): input is CommonObjectTypeExpl {
  return (
    input !== null &&
    typeof input === 'object' &&
    typeof input.objExplBoolField === 'boolean' &&
    (isCommonEnumType(input.objExplEnmField) as boolean) &&
    typeof input.objExplNumField === 'number' &&
    (input.objExplOptBoolField === null ||
      input.objExplOptBoolField === undefined ||
      typeof input.objExplOptBoolField === 'boolean') &&
    (input.objExplOptEnmField === null ||
      input.objExplOptEnmField === undefined ||
      (isCommonEnumType(input.objExplOptEnmField) as boolean)) &&
    (input.objExplOptNumField === null ||
      input.objExplOptNumField === undefined ||
      typeof input.objExplOptNumField === 'number') &&
    (input.objExplOptStrField === null ||
      input.objExplOptStrField === undefined ||
      typeof input.objExplOptStrField === 'string') &&
    typeof input.objExplStrField === 'string'
  )
}

export function isCommonOptObjectType(input: any): input is CommonOptObjectType {
  return (
    input !== null &&
    typeof input === 'object' &&
    typeof input.optObjBoolField === 'boolean' &&
    (isCommonEnumType(input.optObjEnmField) as boolean) &&
    typeof input.optObjNumField === 'number' &&
    (input.optObjOptBoolField === null ||
      input.optObjOptBoolField === undefined ||
      typeof input.optObjOptBoolField === 'boolean') &&
    (input.optObjOptEnmField === null ||
      input.optObjOptEnmField === undefined ||
      (isCommonEnumType(input.optObjOptEnmField) as boolean)) &&
    (input.optObjOptNumField === null ||
      input.optObjOptNumField === undefined ||
      typeof input.optObjOptNumField === 'number') &&
    (input.optObjOptStrField === null ||
      input.optObjOptStrField === undefined ||
      typeof input.optObjOptStrField === 'string') &&
    typeof input.optObjStrField === 'string'
  )
}

export function isCommonOptObjectTypeExpl(input: any): input is CommonOptObjectTypeExpl {
  return (
    input !== null &&
    typeof input === 'object' &&
    typeof input.optObjExplBoolField === 'boolean' &&
    (isCommonEnumType(input.optObjExplEnmField) as boolean) &&
    typeof input.optObjExplNumField === 'number' &&
    (input.optObjExplOptBoolField === null ||
      input.optObjExplOptBoolField === undefined ||
      typeof input.optObjExplOptBoolField === 'boolean') &&
    (input.optObjExplOptEnmField === null ||
      input.optObjExplOptEnmField === undefined ||
      (isCommonEnumType(input.optObjExplOptEnmField) as boolean)) &&
    (input.optObjExplOptNumField === null ||
      input.optObjExplOptNumField === undefined ||
      typeof input.optObjExplOptNumField === 'number') &&
    (input.optObjExplOptStrField === null ||
      input.optObjExplOptStrField === undefined ||
      typeof input.optObjExplOptStrField === 'string') &&
    typeof input.optObjExplStrField === 'string'
  )
}

export function isDeepObjectQueryParameters(input: any): input is DeepObjectQueryParameters {
  return (
    input !== null &&
    typeof input === 'object' &&
    (isCommonObjectTypeExpl(input.objExpl) as boolean) &&
    (input.optObjExpl === null ||
      input.optObjExpl === undefined ||
      (isCommonOptObjectTypeExpl(input.optObjExpl) as boolean))
  )
}

export function isFormCookieParameters(input: any): input is FormCookieParameters {
  return (
    input !== null &&
    typeof input === 'object' &&
    (input.optBool === null || input.optBool === undefined || typeof input.optBool === 'boolean') &&
    (input.optEnm === null || input.optEnm === undefined || (isCommonEnumType(input.optEnm) as boolean)) &&
    (input.optNum === null || input.optNum === undefined || typeof input.optNum === 'number') &&
    (input.optStr === null || input.optStr === undefined || typeof input.optStr === 'string')
  )
}

export function isFormQueryParameters(input: any): input is FormQueryParameters {
  return (
    input !== null &&
    typeof input === 'object' &&
    typeof input.bool === 'boolean' &&
    Array.isArray(input.boolArr) &&
    input.boolArr.every((item: any) => typeof item === 'boolean') &&
    Array.isArray(input.boolArrExpl) &&
    input.boolArrExpl.every((item: any) => typeof item === 'boolean') &&
    typeof input.boolExpl === 'boolean' &&
    (isCommonEnumType(input.enm) as boolean) &&
    Array.isArray(input.enmArr) &&
    input.enmArr.every((item: any) => isCommonEnumType(item) as boolean) &&
    Array.isArray(input.enmArrExpl) &&
    input.enmArrExpl.every((item: any) => isCommonEnumType(item) as boolean) &&
    (isCommonEnumType(input.enmExpl) as boolean) &&
    typeof input.num === 'number' &&
    Array.isArray(input.numArr) &&
    input.numArr.every((item: any) => typeof item === 'number') &&
    Array.isArray(input.numArrExpl) &&
    input.numArrExpl.every((item: any) => typeof item === 'number') &&
    typeof input.numExpl === 'number' &&
    (isCommonObjectType(input.obj) as boolean) &&
    (isCommonObjectTypeExpl(input.objExpl) as boolean) &&
    (input.optBool === null || input.optBool === undefined || typeof input.optBool === 'boolean') &&
    (input.optBoolArr === null ||
      input.optBoolArr === undefined ||
      (Array.isArray(input.optBoolArr) && input.optBoolArr.every((item: any) => typeof item === 'boolean'))) &&
    (input.optBoolArrExpl === null ||
      input.optBoolArrExpl === undefined ||
      (Array.isArray(input.optBoolArrExpl) && input.optBoolArrExpl.every((item: any) => typeof item === 'boolean'))) &&
    (input.optBoolExpl === null || input.optBoolExpl === undefined || typeof input.optBoolExpl === 'boolean') &&
    (input.optEnm === null || input.optEnm === undefined || (isCommonEnumType(input.optEnm) as boolean)) &&
    (input.optEnmArr === null ||
      input.optEnmArr === undefined ||
      (Array.isArray(input.optEnmArr) && input.optEnmArr.every((item: any) => isCommonEnumType(item) as boolean))) &&
    (input.optEnmArrExpl === null ||
      input.optEnmArrExpl === undefined ||
      (Array.isArray(input.optEnmArrExpl) &&
        input.optEnmArrExpl.every((item: any) => isCommonEnumType(item) as boolean))) &&
    (input.optEnmExpl === null || input.optEnmExpl === undefined || (isCommonEnumType(input.optEnmExpl) as boolean)) &&
    (input.optNum === null || input.optNum === undefined || typeof input.optNum === 'number') &&
    (input.optNumArr === null ||
      input.optNumArr === undefined ||
      (Array.isArray(input.optNumArr) && input.optNumArr.every((item: any) => typeof item === 'number'))) &&
    (input.optNumArrExpl === null ||
      input.optNumArrExpl === undefined ||
      (Array.isArray(input.optNumArrExpl) && input.optNumArrExpl.every((item: any) => typeof item === 'number'))) &&
    (input.optNumExpl === null || input.optNumExpl === undefined || typeof input.optNumExpl === 'number') &&
    (input.optObj === null || input.optObj === undefined || (isCommonOptObjectType(input.optObj) as boolean)) &&
    (input.optObjExpl === null ||
      input.optObjExpl === undefined ||
      (isCommonOptObjectTypeExpl(input.optObjExpl) as boolean)) &&
    (input.optStr === null || input.optStr === undefined || typeof input.optStr === 'string') &&
    (input.optStrArr === null ||
      input.optStrArr === undefined ||
      (Array.isArray(input.optStrArr) && input.optStrArr.every((item: any) => typeof item === 'string'))) &&
    (input.optStrArrExpl === null ||
      input.optStrArrExpl === undefined ||
      (Array.isArray(input.optStrArrExpl) && input.optStrArrExpl.every((item: any) => typeof item === 'string'))) &&
    (input.optStrExpl === null || input.optStrExpl === undefined || typeof input.optStrExpl === 'string') &&
    typeof input.str === 'string' &&
    Array.isArray(input.strArr) &&
    input.strArr.every((item: any) => typeof item === 'string') &&
    Array.isArray(input.strArrExpl) &&
    input.strArrExpl.every((item: any) => typeof item === 'string') &&
    typeof input.strExpl === 'string'
  )
}

export function isLabelPathParameters(input: any): input is LabelPathParameters {
  return (
    input !== null &&
    typeof input === 'object' &&
    typeof input.bool === 'boolean' &&
    Array.isArray(input.boolArr) &&
    input.boolArr.every((item: any) => typeof item === 'boolean') &&
    Array.isArray(input.boolArrExpl) &&
    input.boolArrExpl.every((item: any) => typeof item === 'boolean') &&
    typeof input.boolExpl === 'boolean' &&
    (isCommonEnumType(input.enm) as boolean) &&
    Array.isArray(input.enmArr) &&
    input.enmArr.every((item: any) => isCommonEnumType(item) as boolean) &&
    Array.isArray(input.enmArrExpl) &&
    input.enmArrExpl.every((item: any) => isCommonEnumType(item) as boolean) &&
    (isCommonEnumType(input.enmExpl) as boolean) &&
    typeof input.num === 'number' &&
    Array.isArray(input.numArr) &&
    input.numArr.every((item: any) => typeof item === 'number') &&
    Array.isArray(input.numArrExpl) &&
    input.numArrExpl.every((item: any) => typeof item === 'number') &&
    typeof input.numExpl === 'number' &&
    (isCommonObjectType(input.obj) as boolean) &&
    (isCommonObjectTypeExpl(input.objExpl) as boolean) &&
    typeof input.str === 'string' &&
    Array.isArray(input.strArr) &&
    input.strArr.every((item: any) => typeof item === 'string') &&
    Array.isArray(input.strArrExpl) &&
    input.strArrExpl.every((item: any) => typeof item === 'string') &&
    typeof input.strExpl === 'string'
  )
}

export function isMatrixPathParameters(input: any): input is MatrixPathParameters {
  return (
    input !== null &&
    typeof input === 'object' &&
    typeof input.bool === 'boolean' &&
    Array.isArray(input.boolArr) &&
    input.boolArr.every((item: any) => typeof item === 'boolean') &&
    Array.isArray(input.boolArrExpl) &&
    input.boolArrExpl.every((item: any) => typeof item === 'boolean') &&
    typeof input.boolExpl === 'boolean' &&
    (isCommonEnumType(input.enm) as boolean) &&
    Array.isArray(input.enmArr) &&
    input.enmArr.every((item: any) => isCommonEnumType(item) as boolean) &&
    Array.isArray(input.enmArrExpl) &&
    input.enmArrExpl.every((item: any) => isCommonEnumType(item) as boolean) &&
    (isCommonEnumType(input.enmExpl) as boolean) &&
    typeof input.num === 'number' &&
    Array.isArray(input.numArr) &&
    input.numArr.every((item: any) => typeof item === 'number') &&
    Array.isArray(input.numArrExpl) &&
    input.numArrExpl.every((item: any) => typeof item === 'number') &&
    typeof input.numExpl === 'number' &&
    (isCommonObjectType(input.obj) as boolean) &&
    (isCommonObjectTypeExpl(input.objExpl) as boolean) &&
    typeof input.str === 'string' &&
    Array.isArray(input.strArr) &&
    input.strArr.every((item: any) => typeof item === 'string') &&
    Array.isArray(input.strArrExpl) &&
    input.strArrExpl.every((item: any) => typeof item === 'string') &&
    typeof input.strExpl === 'string'
  )
}

export function isParameterIssue(input: any): input is ParameterIssue {
  return input !== null && typeof input === 'object' && typeof input.message === 'string'
}

export function isPipeDelimitedQueryParameters(input: any): input is PipeDelimitedQueryParameters {
  return (
    input !== null &&
    typeof input === 'object' &&
    Array.isArray(input.boolArrExpl) &&
    input.boolArrExpl.every((item: any) => typeof item === 'boolean') &&
    Array.isArray(input.enmArrExpl) &&
    input.enmArrExpl.every((item: any) => isCommonEnumType(item) as boolean) &&
    Array.isArray(input.numArrExpl) &&
    input.numArrExpl.every((item: any) => typeof item === 'number') &&
    (input.optBoolArrExpl === null ||
      input.optBoolArrExpl === undefined ||
      (Array.isArray(input.optBoolArrExpl) && input.optBoolArrExpl.every((item: any) => typeof item === 'boolean'))) &&
    (input.optEnmArrExpl === null ||
      input.optEnmArrExpl === undefined ||
      (Array.isArray(input.optEnmArrExpl) &&
        input.optEnmArrExpl.every((item: any) => isCommonEnumType(item) as boolean))) &&
    (input.optNumArrExpl === null ||
      input.optNumArrExpl === undefined ||
      (Array.isArray(input.optNumArrExpl) && input.optNumArrExpl.every((item: any) => typeof item === 'number'))) &&
    (input.optStrArrExpl === null ||
      input.optStrArrExpl === undefined ||
      (Array.isArray(input.optStrArrExpl) && input.optStrArrExpl.every((item: any) => typeof item === 'string'))) &&
    Array.isArray(input.strArrExpl) &&
    input.strArrExpl.every((item: any) => typeof item === 'string')
  )
}

export function isSimpleHeaderParameters(input: any): input is SimpleHeaderParameters {
  return (
    input !== null &&
    typeof input === 'object' &&
    typeof input['X-Bool-Header'] === 'boolean' &&
    Array.isArray(input['X-BoolArr-Header']) &&
    input['X-BoolArr-Header'].every((item: any) => typeof item === 'boolean') &&
    Array.isArray(input['X-BoolArrExpl-Header']) &&
    input['X-BoolArrExpl-Header'].every((item: any) => typeof item === 'boolean') &&
    typeof input['X-BoolExpl-Header'] === 'boolean' &&
    (isCommonEnumType(input['X-Enm-Header']) as boolean) &&
    Array.isArray(input['X-EnmArr-Header']) &&
    input['X-EnmArr-Header'].every((item: any) => isCommonEnumType(item) as boolean) &&
    Array.isArray(input['X-EnmArrExpl-Header']) &&
    input['X-EnmArrExpl-Header'].every((item: any) => isCommonEnumType(item) as boolean) &&
    (isCommonEnumType(input['X-EnmExpl-Header']) as boolean) &&
    typeof input['X-Num-Header'] === 'number' &&
    Array.isArray(input['X-NumArr-Header']) &&
    input['X-NumArr-Header'].every((item: any) => typeof item === 'number') &&
    Array.isArray(input['X-NumArrExpl-Header']) &&
    input['X-NumArrExpl-Header'].every((item: any) => typeof item === 'number') &&
    typeof input['X-NumExpl-Header'] === 'number' &&
    (isCommonObjectType(input['X-Obj-Header']) as boolean) &&
    (isCommonObjectTypeExpl(input['X-ObjExpl-Header']) as boolean) &&
    (input['X-OptBool-Header'] === null ||
      input['X-OptBool-Header'] === undefined ||
      typeof input['X-OptBool-Header'] === 'boolean') &&
    (input['X-OptBoolArr-Header'] === null ||
      input['X-OptBoolArr-Header'] === undefined ||
      (Array.isArray(input['X-OptBoolArr-Header']) &&
        input['X-OptBoolArr-Header'].every((item: any) => typeof item === 'boolean'))) &&
    (input['X-OptBoolArrExpl-Header'] === null ||
      input['X-OptBoolArrExpl-Header'] === undefined ||
      (Array.isArray(input['X-OptBoolArrExpl-Header']) &&
        input['X-OptBoolArrExpl-Header'].every((item: any) => typeof item === 'boolean'))) &&
    (input['X-OptBoolExpl-Header'] === null ||
      input['X-OptBoolExpl-Header'] === undefined ||
      typeof input['X-OptBoolExpl-Header'] === 'boolean') &&
    (input['X-OptEnm-Header'] === null ||
      input['X-OptEnm-Header'] === undefined ||
      (isCommonEnumType(input['X-OptEnm-Header']) as boolean)) &&
    (input['X-OptEnmArr-Header'] === null ||
      input['X-OptEnmArr-Header'] === undefined ||
      (Array.isArray(input['X-OptEnmArr-Header']) &&
        input['X-OptEnmArr-Header'].every((item: any) => isCommonEnumType(item) as boolean))) &&
    (input['X-OptEnmArrExpl-Header'] === null ||
      input['X-OptEnmArrExpl-Header'] === undefined ||
      (Array.isArray(input['X-OptEnmArrExpl-Header']) &&
        input['X-OptEnmArrExpl-Header'].every((item: any) => isCommonEnumType(item) as boolean))) &&
    (input['X-OptEnmExpl-Header'] === null ||
      input['X-OptEnmExpl-Header'] === undefined ||
      (isCommonEnumType(input['X-OptEnmExpl-Header']) as boolean)) &&
    (input['X-OptNum-Header'] === null ||
      input['X-OptNum-Header'] === undefined ||
      typeof input['X-OptNum-Header'] === 'number') &&
    (input['X-OptNumArr-Header'] === null ||
      input['X-OptNumArr-Header'] === undefined ||
      (Array.isArray(input['X-OptNumArr-Header']) &&
        input['X-OptNumArr-Header'].every((item: any) => typeof item === 'number'))) &&
    (input['X-OptNumArrExpl-Header'] === null ||
      input['X-OptNumArrExpl-Header'] === undefined ||
      (Array.isArray(input['X-OptNumArrExpl-Header']) &&
        input['X-OptNumArrExpl-Header'].every((item: any) => typeof item === 'number'))) &&
    (input['X-OptNumExpl-Header'] === null ||
      input['X-OptNumExpl-Header'] === undefined ||
      typeof input['X-OptNumExpl-Header'] === 'number') &&
    (input['X-OptObj-Header'] === null ||
      input['X-OptObj-Header'] === undefined ||
      (isCommonOptObjectType(input['X-OptObj-Header']) as boolean)) &&
    (input['X-OptObjExpl-Header'] === null ||
      input['X-OptObjExpl-Header'] === undefined ||
      (isCommonOptObjectTypeExpl(input['X-OptObjExpl-Header']) as boolean)) &&
    (input['X-OptStr-Header'] === null ||
      input['X-OptStr-Header'] === undefined ||
      typeof input['X-OptStr-Header'] === 'string') &&
    (input['X-OptStrArr-Header'] === null ||
      input['X-OptStrArr-Header'] === undefined ||
      (Array.isArray(input['X-OptStrArr-Header']) &&
        input['X-OptStrArr-Header'].every((item: any) => typeof item === 'string'))) &&
    (input['X-OptStrArrExpl-Header'] === null ||
      input['X-OptStrArrExpl-Header'] === undefined ||
      (Array.isArray(input['X-OptStrArrExpl-Header']) &&
        input['X-OptStrArrExpl-Header'].every((item: any) => typeof item === 'string'))) &&
    (input['X-OptStrExpl-Header'] === null ||
      input['X-OptStrExpl-Header'] === undefined ||
      typeof input['X-OptStrExpl-Header'] === 'string') &&
    typeof input['X-Str-Header'] === 'string' &&
    Array.isArray(input['X-StrArr-Header']) &&
    input['X-StrArr-Header'].every((item: any) => typeof item === 'string') &&
    Array.isArray(input['X-StrArrExpl-Header']) &&
    input['X-StrArrExpl-Header'].every((item: any) => typeof item === 'string') &&
    typeof input['X-StrExpl-Header'] === 'string'
  )
}

export function isSimplePathParameters(input: any): input is SimplePathParameters {
  return (
    input !== null &&
    typeof input === 'object' &&
    typeof input.bool === 'boolean' &&
    Array.isArray(input.boolArr) &&
    input.boolArr.every((item: any) => typeof item === 'boolean') &&
    Array.isArray(input.boolArrExpl) &&
    input.boolArrExpl.every((item: any) => typeof item === 'boolean') &&
    typeof input.boolExpl === 'boolean' &&
    (isCommonEnumType(input.enm) as boolean) &&
    Array.isArray(input.enmArr) &&
    input.enmArr.every((item: any) => isCommonEnumType(item) as boolean) &&
    Array.isArray(input.enmArrExpl) &&
    input.enmArrExpl.every((item: any) => isCommonEnumType(item) as boolean) &&
    (isCommonEnumType(input.enmExpl) as boolean) &&
    typeof input.num === 'number' &&
    Array.isArray(input.numArr) &&
    input.numArr.every((item: any) => typeof item === 'number') &&
    Array.isArray(input.numArrExpl) &&
    input.numArrExpl.every((item: any) => typeof item === 'number') &&
    typeof input.numExpl === 'number' &&
    (isCommonObjectType(input.obj) as boolean) &&
    (isCommonObjectTypeExpl(input.objExpl) as boolean) &&
    typeof input.str === 'string' &&
    Array.isArray(input.strArr) &&
    input.strArr.every((item: any) => typeof item === 'string') &&
    Array.isArray(input.strArrExpl) &&
    input.strArrExpl.every((item: any) => typeof item === 'string') &&
    typeof input.strExpl === 'string'
  )
}

export function isSimpleResponseHeaderParameters(input: any): input is SimpleResponseHeaderParameters {
  return (
    input !== null &&
    typeof input === 'object' &&
    typeof input['X-Bool-Header'] === 'boolean' &&
    Array.isArray(input['X-BoolArr-Header']) &&
    input['X-BoolArr-Header'].every((item: any) => typeof item === 'boolean') &&
    Array.isArray(input['X-BoolArrExpl-Header']) &&
    input['X-BoolArrExpl-Header'].every((item: any) => typeof item === 'boolean') &&
    typeof input['X-BoolExpl-Header'] === 'boolean' &&
    (isCommonEnumType(input['X-Enm-Header']) as boolean) &&
    Array.isArray(input['X-EnmArr-Header']) &&
    input['X-EnmArr-Header'].every((item: any) => isCommonEnumType(item) as boolean) &&
    Array.isArray(input['X-EnmArrExpl-Header']) &&
    input['X-EnmArrExpl-Header'].every((item: any) => isCommonEnumType(item) as boolean) &&
    (isCommonEnumType(input['X-EnmExpl-Header']) as boolean) &&
    typeof input['X-Num-Header'] === 'number' &&
    Array.isArray(input['X-NumArr-Header']) &&
    input['X-NumArr-Header'].every((item: any) => typeof item === 'number') &&
    Array.isArray(input['X-NumArrExpl-Header']) &&
    input['X-NumArrExpl-Header'].every((item: any) => typeof item === 'number') &&
    typeof input['X-NumExpl-Header'] === 'number' &&
    (isCommonObjectType(input['X-Obj-Header']) as boolean) &&
    (isCommonObjectTypeExpl(input['X-ObjExpl-Header']) as boolean) &&
    (input['X-OptBool-Header'] === null ||
      input['X-OptBool-Header'] === undefined ||
      typeof input['X-OptBool-Header'] === 'boolean') &&
    (input['X-OptBoolArr-Header'] === null ||
      input['X-OptBoolArr-Header'] === undefined ||
      (Array.isArray(input['X-OptBoolArr-Header']) &&
        input['X-OptBoolArr-Header'].every((item: any) => typeof item === 'boolean'))) &&
    (input['X-OptBoolArrExpl-Header'] === null ||
      input['X-OptBoolArrExpl-Header'] === undefined ||
      (Array.isArray(input['X-OptBoolArrExpl-Header']) &&
        input['X-OptBoolArrExpl-Header'].every((item: any) => typeof item === 'boolean'))) &&
    (input['X-OptBoolExpl-Header'] === null ||
      input['X-OptBoolExpl-Header'] === undefined ||
      typeof input['X-OptBoolExpl-Header'] === 'boolean') &&
    (input['X-OptEnm-Header'] === null ||
      input['X-OptEnm-Header'] === undefined ||
      (isCommonEnumType(input['X-OptEnm-Header']) as boolean)) &&
    (input['X-OptEnmArr-Header'] === null ||
      input['X-OptEnmArr-Header'] === undefined ||
      (Array.isArray(input['X-OptEnmArr-Header']) &&
        input['X-OptEnmArr-Header'].every((item: any) => isCommonEnumType(item) as boolean))) &&
    (input['X-OptEnmArrExpl-Header'] === null ||
      input['X-OptEnmArrExpl-Header'] === undefined ||
      (Array.isArray(input['X-OptEnmArrExpl-Header']) &&
        input['X-OptEnmArrExpl-Header'].every((item: any) => isCommonEnumType(item) as boolean))) &&
    (input['X-OptEnmExpl-Header'] === null ||
      input['X-OptEnmExpl-Header'] === undefined ||
      (isCommonEnumType(input['X-OptEnmExpl-Header']) as boolean)) &&
    (input['X-OptNum-Header'] === null ||
      input['X-OptNum-Header'] === undefined ||
      typeof input['X-OptNum-Header'] === 'number') &&
    (input['X-OptNumArr-Header'] === null ||
      input['X-OptNumArr-Header'] === undefined ||
      (Array.isArray(input['X-OptNumArr-Header']) &&
        input['X-OptNumArr-Header'].every((item: any) => typeof item === 'number'))) &&
    (input['X-OptNumArrExpl-Header'] === null ||
      input['X-OptNumArrExpl-Header'] === undefined ||
      (Array.isArray(input['X-OptNumArrExpl-Header']) &&
        input['X-OptNumArrExpl-Header'].every((item: any) => typeof item === 'number'))) &&
    (input['X-OptNumExpl-Header'] === null ||
      input['X-OptNumExpl-Header'] === undefined ||
      typeof input['X-OptNumExpl-Header'] === 'number') &&
    (input['X-OptObj-Header'] === null ||
      input['X-OptObj-Header'] === undefined ||
      (isCommonOptObjectType(input['X-OptObj-Header']) as boolean)) &&
    (input['X-OptObjExpl-Header'] === null ||
      input['X-OptObjExpl-Header'] === undefined ||
      (isCommonOptObjectTypeExpl(input['X-OptObjExpl-Header']) as boolean)) &&
    (input['X-OptStr-Header'] === null ||
      input['X-OptStr-Header'] === undefined ||
      typeof input['X-OptStr-Header'] === 'string') &&
    (input['X-OptStrArr-Header'] === null ||
      input['X-OptStrArr-Header'] === undefined ||
      (Array.isArray(input['X-OptStrArr-Header']) &&
        input['X-OptStrArr-Header'].every((item: any) => typeof item === 'string'))) &&
    (input['X-OptStrArrExpl-Header'] === null ||
      input['X-OptStrArrExpl-Header'] === undefined ||
      (Array.isArray(input['X-OptStrArrExpl-Header']) &&
        input['X-OptStrArrExpl-Header'].every((item: any) => typeof item === 'string'))) &&
    (input['X-OptStrExpl-Header'] === null ||
      input['X-OptStrExpl-Header'] === undefined ||
      typeof input['X-OptStrExpl-Header'] === 'string') &&
    typeof input['X-Str-Header'] === 'string' &&
    Array.isArray(input['X-StrArr-Header']) &&
    input['X-StrArr-Header'].every((item: any) => typeof item === 'string') &&
    Array.isArray(input['X-StrArrExpl-Header']) &&
    input['X-StrArrExpl-Header'].every((item: any) => typeof item === 'string') &&
    typeof input['X-StrExpl-Header'] === 'string'
  )
}

export function isSpaceDelimitedQueryParameters(input: any): input is SpaceDelimitedQueryParameters {
  return (
    input !== null &&
    typeof input === 'object' &&
    Array.isArray(input.boolArrExpl) &&
    input.boolArrExpl.every((item: any) => typeof item === 'boolean') &&
    Array.isArray(input.enmArrExpl) &&
    input.enmArrExpl.every((item: any) => isCommonEnumType(item) as boolean) &&
    Array.isArray(input.numArrExpl) &&
    input.numArrExpl.every((item: any) => typeof item === 'number') &&
    (input.optBoolArrExpl === null ||
      input.optBoolArrExpl === undefined ||
      (Array.isArray(input.optBoolArrExpl) && input.optBoolArrExpl.every((item: any) => typeof item === 'boolean'))) &&
    (input.optEnmArrExpl === null ||
      input.optEnmArrExpl === undefined ||
      (Array.isArray(input.optEnmArrExpl) &&
        input.optEnmArrExpl.every((item: any) => isCommonEnumType(item) as boolean))) &&
    (input.optNumArrExpl === null ||
      input.optNumArrExpl === undefined ||
      (Array.isArray(input.optNumArrExpl) && input.optNumArrExpl.every((item: any) => typeof item === 'number'))) &&
    (input.optStrArrExpl === null ||
      input.optStrArrExpl === undefined ||
      (Array.isArray(input.optStrArrExpl) && input.optStrArrExpl.every((item: any) => typeof item === 'string'))) &&
    Array.isArray(input.strArrExpl) &&
    input.strArrExpl.every((item: any) => typeof item === 'string')
  )
}
