/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from schemas/book-store.json (originating from oats-ts/oats-schemas)
 */

import { ExpressToolkit } from '@oats-ts/openapi-express-server-adapter'
import { ServerAdapter } from '@oats-ts/openapi-runtime'
import { IRouter, NextFunction, Request, Response, Router } from 'express'
import { bookStoreCorsConfiguration } from './corsConfiguration'

export function createBookStoreCorsRouter(router?: IRouter | undefined): IRouter {
  return (router ?? Router())
    .options('/books/:bookId', async (request: Request, response: Response, next: NextFunction) => {
      const toolkit: ExpressToolkit = { request, response, next }
      const adapter: ServerAdapter<ExpressToolkit> = response.locals['__oats_adapter_1o36nbj']
      try {
        const method = adapter.getAccessControlRequestedMethod(toolkit)
        const corsConfig = method === undefined ? undefined : bookStoreCorsConfiguration?.['/books/{bookId}']?.[method]
        const corsHeaders = await adapter.getPreflightCorsHeaders(toolkit, method, corsConfig)
        await adapter.respond(toolkit, { headers: corsHeaders })
      } catch (error) {
        adapter.handleError(toolkit, error)
      }
    })
    .options('/books', async (request: Request, response: Response, next: NextFunction) => {
      const toolkit: ExpressToolkit = { request, response, next }
      const adapter: ServerAdapter<ExpressToolkit> = response.locals['__oats_adapter_1o36nbj']
      try {
        const method = adapter.getAccessControlRequestedMethod(toolkit)
        const corsConfig = method === undefined ? undefined : bookStoreCorsConfiguration?.['/books']?.[method]
        const corsHeaders = await adapter.getPreflightCorsHeaders(toolkit, method, corsConfig)
        await adapter.respond(toolkit, { headers: corsHeaders })
      } catch (error) {
        adapter.handleError(toolkit, error)
      }
    })
}
