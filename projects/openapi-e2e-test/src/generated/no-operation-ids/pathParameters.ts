/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from edge-cases/no-operation-ids.json (originating from oats-ts/oats-schemas)
 */

import {
  PathDescriptorRule,
  parameters,
  parsePathToMatcher,
  parsePathToSegments,
  schemas,
} from '@oats-ts/openapi-runtime'
import { PatchFooParam1BarParam2PathParameters, PutFooParam1BarParam2PathParameters } from './pathTypes'

export const patchFooParam1BarParam2PathParameters: PathDescriptorRule<PatchFooParam1BarParam2PathParameters> = {
  parameters: {
    param1: parameters.path.simple.required.primitive(parameters.value.string()),
    param2: parameters.path.simple.required.primitive(parameters.value.string()),
  },
  schema: schemas.object(
    schemas.shape({
      param1: schemas.string(),
      param2: schemas.string(),
    }),
  ),
  matcher: parsePathToMatcher('/foo/{param1}/bar/{param2}'),
  pathSegments: parsePathToSegments('/foo/{param1}/bar/{param2}'),
}

export const putFooParam1BarParam2PathParameters: PathDescriptorRule<PutFooParam1BarParam2PathParameters> = {
  parameters: {
    param1: parameters.path.simple.required.primitive(parameters.value.string()),
    param2: parameters.path.simple.required.primitive(parameters.value.string()),
  },
  schema: schemas.object(
    schemas.shape({
      param1: schemas.string(),
      param2: schemas.string(),
    }),
  ),
  matcher: parsePathToMatcher('/foo/{param1}/bar/{param2}'),
  pathSegments: parsePathToSegments('/foo/{param1}/bar/{param2}'),
}
