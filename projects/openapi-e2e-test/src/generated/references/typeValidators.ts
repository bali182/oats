/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from schemas/references.json (originating from oats-ts/oats-schemas)
 */

import { schemas } from '@oats-ts/openapi-runtime'

export const inlineRefTargetTypeValidator = schemas.object(schemas.shape({ foo: schemas.optional(schemas.string()) }))

export const inlineRefTypeTypeValidator = schemas.lazy(() => inlineRefTargetTypeValidator)

export const referenceTargetTypeValidator = schemas.object(
  schemas.shape({ referenceTarget: schemas.optional(schemas.literal(true)) }),
)

export const remoteRefTypeTypeValidator = schemas.lazy(() => typeWithRemoteRefFieldTypeValidator)

export const typeWithRefOfRemoteRefTypeValidator = schemas.object(
  schemas.shape({
    referenceArrayField: schemas.array(schemas.items(schemas.lazy(() => typeWithRemoteRefFieldTypeValidator))),
    referenceField: schemas.lazy(() => typeWithRemoteRefFieldTypeValidator),
  }),
)

export const typeWithRemoteRefFieldTypeValidator = schemas.object(
  schemas.shape({
    referenceArrayField: schemas.array(schemas.items(schemas.lazy(() => referenceTargetTypeValidator))),
    referenceField: schemas.lazy(() => referenceTargetTypeValidator),
  }),
)
