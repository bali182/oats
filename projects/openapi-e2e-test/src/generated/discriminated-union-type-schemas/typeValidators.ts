/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from schemas/discriminated-union-type-schemas.json (originating from oats-ts/oats-schemas)
 */

import { schemas } from '@oats-ts/openapi-runtime'

export const leafType1TypeValidator = schemas.object(
  schemas.shape({
    type: schemas.literal('LeafType1'),
    foo: schemas.string(),
  }),
)

export const leafType2TypeValidator = schemas.object(
  schemas.shape({
    type: schemas.literal('LeafType2'),
    bar: schemas.string(),
  }),
)

export const leafType3TypeValidator = schemas.object(
  schemas.shape({
    type: schemas.literal('LeafType3'),
    foobar: schemas.string(),
  }),
)

export const midLevelUnionTypeTypeValidator = schemas.union({
  LeafType2: schemas.lazy(() => leafType2TypeValidator),
  LeafType3: schemas.lazy(() => leafType3TypeValidator),
})

export const topLevelUnionTypeTypeValidator = schemas.union({
  LeafType1: schemas.lazy(() => leafType1TypeValidator),
  MidLevelUnionType: schemas.lazy(() => midLevelUnionTypeTypeValidator),
})
