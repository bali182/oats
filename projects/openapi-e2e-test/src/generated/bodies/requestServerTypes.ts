/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from https://raw.githubusercontent.com/oats-ts/oats-schemas/master/generated-schemas/bodies.json
 */

import { Try } from '@oats-ts/openapi-runtime'
import {
  EnumType,
  ObjectWithArrays,
  ObjectWithNestedObjects,
  ObjectWithPrimitives,
  PrimitiveOptionalTupleType,
  PrimitiveTupleType,
} from './types'

export type ArrObjServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<ObjectWithArrays>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<ObjectWithArrays>
    }

export type BoolArrServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<boolean[]>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<boolean[]>
    }

export type BoolServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<boolean>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<boolean>
    }

export type EnmArrServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<EnumType[]>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<EnumType[]>
    }

export type EnmServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<EnumType>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<EnumType>
    }

export type NestedObjServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<ObjectWithNestedObjects>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<ObjectWithNestedObjects>
    }

export type NumArrServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<number[]>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<number[]>
    }

export type NumServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<number>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<number>
    }

export type OptPrimTupleServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<PrimitiveOptionalTupleType>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<PrimitiveOptionalTupleType>
    }

export type PrimObjServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<ObjectWithPrimitives>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<ObjectWithPrimitives>
    }

export type PrimTupleServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<PrimitiveTupleType>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<PrimitiveTupleType>
    }

export type StrArrServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<string[]>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<string[]>
    }

export type StrServerRequest =
  | {
      mimeType: 'application/json'
      body: Try<string>
    }
  | {
      mimeType: 'application/yaml'
      body: Try<string>
    }
