/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from https://raw.githubusercontent.com/oats-ts/oats-schemas/master/generated-schemas/bodies.json
 */

import { validators } from '@oats-ts/openapi-runtime'
import {
  enumTypeTypeValidator,
  objectWithArraysTypeValidator,
  objectWithNestedObjectsTypeValidator,
  objectWithPrimitivesTypeValidator,
  primitiveOptionalTupleTypeTypeValidator,
  primitiveTupleTypeTypeValidator,
} from './typeValidators'

export const arrObjRequestBodyValidator = {
  'application/json': validators.lazy(() => objectWithArraysTypeValidator),
  'application/yaml': validators.lazy(() => objectWithArraysTypeValidator),
} as const

export const boolArrRequestBodyValidator = {
  'application/json': validators.array(validators.items(validators.boolean())),
  'application/yaml': validators.array(validators.items(validators.boolean())),
} as const

export const boolRequestBodyValidator = {
  'application/json': validators.boolean(),
  'application/yaml': validators.boolean(),
} as const

export const enmArrRequestBodyValidator = {
  'application/json': validators.array(validators.items(validators.lazy(() => enumTypeTypeValidator))),
  'application/yaml': validators.array(validators.items(validators.lazy(() => enumTypeTypeValidator))),
} as const

export const enmRequestBodyValidator = {
  'application/json': validators.lazy(() => enumTypeTypeValidator),
  'application/yaml': validators.lazy(() => enumTypeTypeValidator),
} as const

export const nestedObjRequestBodyValidator = {
  'application/json': validators.lazy(() => objectWithNestedObjectsTypeValidator),
  'application/yaml': validators.lazy(() => objectWithNestedObjectsTypeValidator),
} as const

export const numArrRequestBodyValidator = {
  'application/json': validators.array(validators.items(validators.number())),
  'application/yaml': validators.array(validators.items(validators.number())),
} as const

export const numRequestBodyValidator = {
  'application/json': validators.number(),
  'application/yaml': validators.number(),
} as const

export const optPrimTupleRequestBodyValidator = {
  'application/json': validators.lazy(() => primitiveOptionalTupleTypeTypeValidator),
  'application/yaml': validators.lazy(() => primitiveOptionalTupleTypeTypeValidator),
} as const

export const primObjRequestBodyValidator = {
  'application/json': validators.lazy(() => objectWithPrimitivesTypeValidator),
  'application/yaml': validators.lazy(() => objectWithPrimitivesTypeValidator),
} as const

export const primTupleRequestBodyValidator = {
  'application/json': validators.lazy(() => primitiveTupleTypeTypeValidator),
  'application/yaml': validators.lazy(() => primitiveTupleTypeTypeValidator),
} as const

export const strArrRequestBodyValidator = {
  'application/json': validators.array(validators.items(validators.string())),
  'application/yaml': validators.array(validators.items(validators.string())),
} as const

export const strRequestBodyValidator = {
  'application/json': validators.string(),
  'application/yaml': validators.string(),
} as const
