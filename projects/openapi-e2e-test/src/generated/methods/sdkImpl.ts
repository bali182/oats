/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from https://raw.githubusercontent.com/oats-ts/oats-schemas/master/generated-schemas/methods.json
 */

import { RunnableOperation, SyncClientAdapter } from '@oats-ts/openapi-runtime'
import {
  DeleteMethodOperation,
  GetMethodOperation,
  PatchMethodOperation,
  PostMethodOperation,
  PutMethodOperation,
} from './operationClasses'
import {
  DeleteMethodResponse,
  GetMethodResponse,
  PatchMethodResponse,
  PostMethodResponse,
  PutMethodResponse,
} from './responseTypes'
import { HttpMethodsSdk } from './sdkType'

export class HttpMethodsSdkImpl implements HttpMethodsSdk {
  protected readonly adapter: SyncClientAdapter
  public constructor(adapter: SyncClientAdapter) {
    this.adapter = adapter
  }
  public async getMethod(): Promise<GetMethodResponse> {
    return this.createGetMethodOperation().run()
  }
  public async postMethod(): Promise<PostMethodResponse> {
    return this.createPostMethodOperation().run()
  }
  public async putMethod(): Promise<PutMethodResponse> {
    return this.createPutMethodOperation().run()
  }
  public async patchMethod(): Promise<PatchMethodResponse> {
    return this.createPatchMethodOperation().run()
  }
  public async deleteMethod(): Promise<DeleteMethodResponse> {
    return this.createDeleteMethodOperation().run()
  }
  protected createGetMethodOperation(): RunnableOperation<never, GetMethodResponse> {
    return new GetMethodOperation(this.adapter)
  }
  protected createPostMethodOperation(): RunnableOperation<never, PostMethodResponse> {
    return new PostMethodOperation(this.adapter)
  }
  protected createPutMethodOperation(): RunnableOperation<never, PutMethodResponse> {
    return new PutMethodOperation(this.adapter)
  }
  protected createPatchMethodOperation(): RunnableOperation<never, PatchMethodResponse> {
    return new PatchMethodOperation(this.adapter)
  }
  protected createDeleteMethodOperation(): RunnableOperation<never, DeleteMethodResponse> {
    return new DeleteMethodOperation(this.adapter)
  }
}
