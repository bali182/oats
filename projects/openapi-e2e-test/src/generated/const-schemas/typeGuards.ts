/*
 * This file has been generated by Oats, please don't modify it by hand!
 *
 * Generated from schemas/const-schemas.json (originating from oats-ts/oats-schemas)
 */

import {
  ArrayLiteralType,
  BooleanLiteralType,
  NestedObjectLiteralType,
  NullLiteralType,
  NumberLiteralType,
  QuotedKeysObjectLiteralType,
  SimpleObjectLiteralType,
  StringLiteralType,
} from './types'

export function isArrayLiteralType(input: any): input is ArrayLiteralType {
  return (
    Array.isArray(input) &&
    input[0] === 'string value' &&
    input[1] === 42 &&
    input[2] === false &&
    input[3] === null &&
    typeof input[4] === 'object' &&
    typeof input[4] !== null &&
    input[4].key === 10 &&
    Array.isArray(input[5]) &&
    input[5][0] === 3 &&
    input[5][1] === false &&
    input[5][2] === 'hello'
  )
}

export function isBooleanLiteralType(input: any): input is BooleanLiteralType {
  return input === true
}

export function isNestedObjectLiteralType(input: any): input is NestedObjectLiteralType {
  return (
    typeof input === 'object' &&
    typeof input !== null &&
    typeof input.obj === 'object' &&
    typeof input.obj !== null &&
    typeof input.obj.I === 'object' &&
    typeof input.obj.I !== null &&
    typeof input.obj.I.am === 'object' &&
    typeof input.obj.I.am !== null &&
    typeof input.obj.I.am.deeply === 'object' &&
    typeof input.obj.I.am.deeply !== null &&
    input.obj.I.am.deeply.nested === true
  )
}

export function isNullLiteralType(input: any): input is NullLiteralType {
  return input === null
}

export function isNumberLiteralType(input: any): input is NumberLiteralType {
  return input === 125
}

export function isQuotedKeysObjectLiteralType(input: any): input is QuotedKeysObjectLiteralType {
  return (
    typeof input === 'object' &&
    typeof input !== null &&
    input['has-dashes'] === true &&
    input['has space'] === true &&
    input['has .`/!+^ chars'] === true
  )
}

export function isSimpleObjectLiteralType(input: any): input is SimpleObjectLiteralType {
  return (
    typeof input === 'object' &&
    typeof input !== null &&
    input.s === "I'm a string" &&
    input.n === 10 &&
    input.b === true
  )
}

export function isStringLiteralType(input: any): input is StringLiteralType {
  return input === "I'm a constant string"
}
