import { generate } from '@oats-ts/oats-ts'
import {
  formatters,
  validator,
  readers,
  writers,
  presets,
  nameProviders,
  pathProviders,
  generator,
  loggers,
} from '@oats-ts/openapi'

function getCorsConfig(url: string) {
  if (url.includes('pet-store-json')) {
    return { getAllowedOrigins: () => true }
  }
  if (url.includes('parameters')) {
    return {
      getAllowedOrigins: () => true,
      isResponseHeaderAllowed: () => true,
      isCredentialsAllowed: (url: string) => {
        return url === '/form-cookie-parameters' ? true : undefined
      },
    }
  }
  if (url.includes('pet-store-yaml')) {
    return { getAllowedOrigins: () => ['https://foo.com'] }
  }
  return undefined
}

export async function generateFromOpenAPIDocument(
  url: string,
  codePath: string,
  pathProviderKind: Exclude<keyof typeof pathProviders, 'delegating'>,
) {
  try {
    await generate({
      logger: loggers.simple(),
      validator: validator(),
      reader: readers.https.mixed(url),
      generator: generator({
        nameProvider: nameProviders.default(),
        pathProvider: pathProviders[pathProviderKind](codePath),
        children: presets.fullStack({
          sendCookieHeader: true,
          parseSetCookieHeaders: true,
          cors: getCorsConfig(url),
          overrides: {
            'oats/type-guard': {
              ignore: (schema: any) => Boolean(schema?.['x-ignore-validation']),
            },
            'oats/type-validator': {
              ignore: (schema: any) => Boolean(schema?.['x-ignore-validation']),
            },
          },
        }),
      }),
      writer: writers.typescript.file({
        format: formatters.prettier({
          parser: 'typescript',
          arrowParens: 'always',
          printWidth: 120,
          semi: false,
          singleQuote: true,
          trailingComma: 'all',
        }),
        comments: {
          leadingComments: [
            {
              type: 'block',
              text: `This file has been generated by Oats, please don't modify it by hand!\n\nGenerated from ${url}`,
            },
          ],
        },
      }),
    })
  } catch (e) {
    console.error(codePath, url)
    console.error('thrown', e, typeof e)
  }
}
