import { SchemaObject } from 'openapi3-ts'
import { boolean, shape, object, optional, string, number, array, items, any } from '@oats-ts/validators'

export const schemaObject = object(
  shape<SchemaObject>(
    {
      type: optional(string()),
      format: optional(string()),
      deprecated: optional(boolean()),
      multipleOf: optional(number()),
      maximum: optional(number()),
      exclusiveMaximum: optional(boolean()),
      minimum: optional(number()),
      exclusiveMinimum: optional(boolean()),
      maxLength: optional(number()),
      minLength: optional(number()),
      pattern: optional(string()),
      maxItems: optional(number()),
      minItems: optional(number()),
      uniqueItems: optional(boolean()),
      description: optional(string()),
      required: optional(array(items(string()))),
      enum: optional(array()),
      discriminator: optional(object()),
      properties: optional(object()),
      allOf: optional(array()),
      oneOf: optional(array()),
      anyOf: optional(array()),
      items: optional(object()),
      additionalProperties: optional(object()),
      default: optional(any),
      example: optional(any),
      examples: optional(array()),
      externalDocs: optional(object()),
      maxProperties: optional(number()),
      minProperties: optional(number()),
      not: optional(object()),
      nullable: optional(boolean()),
      readOnly: optional(boolean()),
      title: optional(string()),
      writeOnly: optional(boolean()),
      xml: optional(object()),
    },
    true,
  ),
)
